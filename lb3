from flask import Flask, request, jsonify
from flask_httpauth import HTTPBasicAuth

app = Flask(__name__)
auth = HTTPBasicAuth()

# Збереження користувацьких даних у словнику
users = {
    "admin": "password123",
    "user1": "securepassword",
}

# Каталог товарів збережено в словнику
catalog = {
    1: {"name": "Laptop", "price": 1000, "color": "silver"},
    2: {"name": "Phone", "price": 500, "color": "black"},
    3: {"name": "Headphones", "price": 80, "color": "white"},
}


# HTTP Basic аутентифікація
@auth.verify_password
def verify_password(username, password):
    if username in users and users[username] == password:
        return username
    return None


# Ендпоінт для роботи зі всіма товарами: /items
@app.route('/items', methods=['GET', 'POST'])
@auth.login_required
def handle_items():
    if request.method == 'GET':
        return jsonify(catalog), 200
    elif request.method == 'POST':
        data = request.json
        if not data or 'name' not in data or 'price' not in data or 'color' not in data:
            return jsonify({"error": "Invalid data. 'name', 'price', and 'color' are required."}), 400
        new_id = max(catalog.keys(), default=0) + 1
        catalog[new_id] = {"name": data['name'], "price": data['price'], "color": data['color']}
        return jsonify({"message": f"Item {new_id} created successfully.", "item": catalog[new_id]}), 201


# Ендпоінт для роботи з конкретним товаром: /items/<id>
@app.route('/items/<int:item_id>', methods=['GET', 'PUT', 'DELETE'])
@auth.login_required
def handle_item(item_id):
    if item_id not in catalog:
        return jsonify({"error": "Item not found."}), 404

    if request.method == 'GET':
        return jsonify(catalog[item_id]), 200

    elif request.method == 'PUT':
        data = request.json
        if not data or 'name' not in data or 'price' not in data or 'color' not in data:
            return jsonify({"error": "Invalid data. 'name', 'price', and 'color' are required."}), 400
        catalog[item_id].update(data)
        return jsonify({"message": f"Item {item_id} updated successfully.", "item": catalog[item_id]}), 200

    elif request.method == 'DELETE':
        del catalog[item_id]
        return jsonify({"message": f"Item {item_id} deleted successfully."}), 200


# Головна сторінка
@app.route('/')
def index():
    return jsonify({"message": "Welcome to the Catalog REST API!"}), 200


if __name__ == '__main__':
    app.run(debug=True)
